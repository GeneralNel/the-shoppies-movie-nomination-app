{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","components/AddNominations.js","components/RemoveNominations.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","NominationComponent","nominationComponent","movies","map","movie","index","className","onClick","handleNominationsClick","src","Poster","onerror","Title","Year","MovieListHeading","heading","SearchBox","value","onChange","event","setSearchValue","target","placeholder","AddNomination","RemoveNominations","App","useState","setMovies","nominations","setNomination","searchValue","getMovieRequest","a","url","fetch","response","json","responseJson","Search","useEffect","movieNominations","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","includes","store","addNotification","title","message","type","container","insert","animationIn","animationOut","dismiss","duration","length","newNominationList","AddNominations","filter","nomination","imdbID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c275be5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MovieList = (props) => {\r\n  const NominationComponent = props.nominationComponent;\r\n  if (props) {\r\n    return (\r\n      <>\r\n        {props.movies.map((movie, index) => (\r\n          <div className=\"movie-container d-flex flex-column justify-content-start m-3\">\r\n            <div className=\"image-container\">\r\n              <div\r\n                onClick={() => props.handleNominationsClick(movie)}\r\n                className=\"overlay d-flex align-items-center justify-content-center\"\r\n              >\r\n                <NominationComponent />\r\n              </div>\r\n              <img\r\n                src={movie.Poster}\r\n                onerror=\"this.onerror=null; this.src='No-Image-Placeholder.png'\"\r\n              ></img>\r\n              <div className=\"text-container\">\r\n                <h3 className=\"title-header\">{movie.Title}</h3>\r\n                <h4 className=\"year-text\">{movie.Year}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nconst MovieListHeading = (props) => {\r\n  return (\r\n    <div className=\"col\">\r\n      <h1>{props.heading}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieListHeading;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className=\"col col-sm-4\">\r\n      <input\r\n        className=\"form-control\"\r\n        value={props.value}\r\n        onChange={(event) => props.setSearchValue(event.target.value)}\r\n        placeholder=\"Type to Search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst AddNomination = () => {\r\n  return (\r\n    <>\r\n      <span className=\"mr-2\">Nominate</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNomination;\r\n","import React from \"react\";\r\n\r\nconst RemoveNominations = () => {\r\n  return (\r\n    <>\r\n      <span className=\"mr-2\">Remove Nomination</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RemoveNominations;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport MovieListHeading from \"./components/MovieListHeading\";\r\nimport SearchBox from \"./components/SearchBox\";\r\nimport AddNominations from \"./components/AddNominations\";\r\nimport RemoveNominations from \"./components/RemoveNominations\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"animate.css\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [nominations, setNomination] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const getMovieRequest = async (searchValue) => {\r\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=395f83a4`;\r\n\r\n    const response = await fetch(url);\r\n    const responseJson = await response.json();\r\n\r\n    if (responseJson.Search) {\r\n      setMovies(responseJson.Search);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieRequest(searchValue);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    const movieNominations = JSON.parse(\r\n      localStorage.getItem(\"the-shoppies-app-nominations\")\r\n    );\r\n    setNomination(movieNominations);\r\n  }, []);\r\n\r\n  const saveToLocalStorage = (items) => {\r\n    localStorage.setItem(\"the-shoppies-app-nominations\", JSON.stringify(items));\r\n  };\r\n\r\n  const addNomination = (movie) => {\r\n    if (nominations.includes(movie)) {\r\n      store.addNotification({\r\n        title: \"Already Nominated\",\r\n        message: \"Sorry, you already nominated this movie. \",\r\n        type: \"warning\",\r\n        container: \"top-right\",\r\n        insert: \"top\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n          duration: 2500,\r\n        },\r\n      });\r\n    } else {\r\n      if (nominations.length >= 5) {\r\n        store.addNotification({\r\n          title: \"Limit Reached!\",\r\n          message: \"Please remove a movie from your nominations list first. \",\r\n          type: \"danger\",\r\n          container: \"top-right\",\r\n          insert: \"top\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 2500,\r\n          },\r\n        });\r\n      } else {\r\n        const newNominationList = [...nominations, movie];\r\n        setNomination(newNominationList);\r\n        saveToLocalStorage(newNominationList);\r\n        store.addNotification({\r\n          title: \"Successfully added!\",\r\n          message: \"This movie has been added to your Nominations list. \",\r\n          type: \"success\",\r\n          container: \"top-right\",\r\n          insert: \"top\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 2500,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const removeNomination = (movie) => {\r\n    const newNominationList = nominations.filter(\r\n      (nomination) => nomination.imdbID !== movie.imdbID\r\n    );\r\n    setNomination(newNominationList);\r\n    saveToLocalStorage(newNominationList);\r\n  };\r\n  return (\r\n    <div className=\"container-fluid the-shoppies-app\">\r\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\r\n        <MovieListHeading heading=\"Movies\" />\r\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MovieList\r\n          movies={movies}\r\n          handleNominationsClick={addNomination}\r\n          nominationComponent={AddNominations}\r\n        />\r\n        <ReactNotification />\r\n      </div>\r\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\r\n        <MovieListHeading heading=\"Nominations\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MovieList\r\n          movies={nominations}\r\n          handleNominationsClick={removeNomination}\r\n          nominationComponent={RemoveNominations}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}